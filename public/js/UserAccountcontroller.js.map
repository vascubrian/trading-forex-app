{"version":3,"sources":["UserAccountcontroller.js"],"names":["$","registerUsers","email","val","userPassword","isEmail","length","html","prop","ajax","url","method","contentType","data","JSON","stringify","password","success","response","window","location","href","error","xhr","err","eval","responseText","message","loginUser","regex","RegExp","test","keypress","event","click","e","key","which","parseInt","jQuery"],"mappings":";CAAA,SAAWA,GAcAC,SAAAA,gBACDC,IAAAA,MAAQF,EAAE,UAAUG,MACpBC,aAAeJ,EAAE,aAAaG,MACtB,KAAVD,OAAiC,KAAjBE,aACbC,QAAQH,OAGPE,aAAaE,OAAS,EACxBN,EAAE,wBAAwBO,KAAK,uBAG/BP,EAAE,YAAYO,KAAK,cACnBP,EAAE,YAAYQ,KAAK,YAAY,GAE/BR,EAAES,KAAK,CACLC,IAAK,wBACLC,OAAQ,OACRC,YAAa,mBACbC,KAAMC,KAAKC,UACT,CACEb,MAAOA,MACPc,SAAUZ,eAEda,QAAS,SAAUC,GACjBC,OAAOC,SAASC,KAAO,KAEzBC,MAAO,SAAUC,MAAAA,KAETC,IAAAA,IAAMC,KAASF,IAAAA,OAAAA,IAAIG,aAAzB,MACA1B,EAAE,wBAAwBO,KAAKiB,IAAIG,SACnC3B,EAAE,YAAYQ,KAAK,YAAY,GAC/BR,EAAE,YAAYO,KAAK,eA1BzBP,EAAE,wBAAwBO,KAAK,2BAgCjCP,EAAE,wBAAwBO,KAAK,8BAe1BqB,SAAAA,YACD1B,IAAAA,MAAQF,EAAE,UAAUG,MACpBC,aAAeJ,EAAE,aAAaG,MACtB,KAAVD,OAAiC,KAAjBE,cAElBJ,EAAE,UAAUO,KAAK,cACjBP,EAAE,UAAUQ,KAAK,YAAY,GAE7BR,EAAES,KAAK,CACLC,IAAK,qBACLC,OAAQ,OACRC,YAAa,mBACbC,KAAMC,KAAKC,UACT,CACEb,MAAOA,MACPc,SAAUZ,eAEda,QAAS,SAAUC,GACjBC,OAAOC,SAASC,KAAO,KAEzBC,MAAO,SAAUC,MAAAA,KAETC,IAAAA,IAAMC,KAASF,IAAAA,OAAAA,IAAIG,aAAzB,MACA1B,EAAE,UAAUO,KAAK,SACjBP,EAAE,wBAAwBO,KAAKiB,IAAIG,SACnC3B,EAAE,UAAUQ,KAAK,YAAY,OAIjCR,EAAE,wBAAwBO,KAAK,8BAI1BF,SAAAA,QAASH,GAET2B,OADO,IAAIC,OAAO,mSACZC,KAAK7B,GApGpBF,EAAE,aAAagC,SAAS,SAAUC,GACfjC,EAAE,aAAaG,MACnBG,OAAS,EACpBN,EAAE,wBAAwBO,KAAK,iBAE/BP,EAAE,wBAAwBO,KAAK,MAInCP,EAAE,YAAYkC,MAAM,SAAUD,GAC5BhC,kBA6CFD,EAAE,UAAUkC,MAAM,SAAUD,GAC1BL,cAEF5B,EAAE,wBAAwBgC,SAAS,SAAUG,GACrCC,IAAAA,EAAMD,EAAEE,MACVC,GAAkB,KAAlBA,SAASF,GAEJ,OADPR,aACO,IA/Db,CAuGGW","file":"UserAccountcontroller.js","sourceRoot":"../src","sourcesContent":["(function ($) {\n  $('#password').keypress(function (event) {\n    const password = $('#password').val();\n    if (password.length < 5) {\n      $('#validateUserAccount').html('Weak password');\n    } else {\n      $('#validateUserAccount').html('');\n    }\n  });\n  // register users\n  $('#sign_up').click(function (event) {\n    registerUsers();\n  });\n\n  function registerUsers () {\n    const email = $('#email').val();\n    const userPassword = $('#password').val();\n    if (email !== '' && userPassword !== '') {\n      if (!isEmail(email)) {\n        $('#validateUserAccount').html('Provide a valid email!!');\n      } else {\n        if (userPassword.length < 5) {\n          $('#validateUserAccount').html('Password is weak!!');\n        } else {\n          // GETTING STARTED\n          $('#sign_up').html('Submitting');\n          $('#sign_up').prop('disabled', true);\n          // AJAX\n          $.ajax({\n            url: '/register-userAccount',\n            method: 'POST',\n            contentType: 'application/json',\n            data: JSON.stringify(\n              {\n                email: email,\n                password: userPassword\n              }),\n            success: function (response) {\n              window.location.href = '/';\n            },\n            error: function (xhr) {\n            // eslint-disable-next-line no-eval\n              const err = eval(`(${xhr.responseText})`); // FIXME: Remove use of `eval` as it's considered really bad.\n              $('#validateUserAccount').html(err.message);\n              $('#sign_up').prop('disabled', false);\n              $('#sign_up').html('Sign up');\n            }\n          });\n        }\n      }\n    } else {\n      $('#validateUserAccount').html('All fields are required !!');\n    }\n  }\n\n  // login submit\n  $('#login').click(function (event) {\n    loginUser();\n  });\n  $('#login_user_password').keypress(function (e) {\n    const key = e.which;\n    if (parseInt(key) === 13) {\n      loginUser();\n      return false;\n    }\n  });\n  function loginUser () {\n    const email = $('#email').val();\n    const userPassword = $('#password').val();\n    if (email !== '' && userPassword !== '') {\n    // GETTING STARTED\n      $('#login').html('Processing');\n      $('#login').prop('disabled', true);\n      // AJAX\n      $.ajax({\n        url: '/login-userAccount',\n        method: 'POST',\n        contentType: 'application/json',\n        data: JSON.stringify(\n          {\n            email: email,\n            password: userPassword\n          }),\n        success: function (response) {\n          window.location.href = '/';\n        },\n        error: function (xhr) {\n          // eslint-disable-next-line no-eval\n          const err = eval(`(${xhr.responseText})`); // FIXME: Remove use of `eval` as it's considered really bad.\n          $('#login').html('Login');\n          $('#validateUserAccount').html(err.message);\n          $('#login').prop('disabled', false);\n        }\n      });\n    } else {\n      $('#validateUserAccount').html('All fields are required !!');\n    }\n  }\n\n  function isEmail (email) {\n    const regex = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n    return regex.test(email);\n  }\n})(jQuery);\n"]}